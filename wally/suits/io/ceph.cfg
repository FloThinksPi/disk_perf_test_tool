[defaults]
wait_for_previous
group_reporting
time_based
buffered=0
iodepth=1
softrandommap=1
filename={FILENAME}
NUM_ROUNDS=7

NUMJOBS={% 1, 5, 10, 15, 20, 30, 40, 80, 120 %}
NUMJOBS_SHORT={% 1, 5, 10, 15, 20, 30, 40 %}

size=30G
ramp_time=30
runtime=60

# ---------------------------------------------------------------------
# check different thread count, sync mode. (latency, iops) = func(th_count)
# ---------------------------------------------------------------------
[ceph_test_{TEST_SUMM} * {NUM_ROUNDS}]
blocksize=4k
rw=randwrite
sync=1
numjobs={NUMJOBS}

# ---------------------------------------------------------------------
# check different thread count, sync mode. (latency, iops) = func(th_count)
# ---------------------------------------------------------------------
[ceph_test_{TEST_SUMM} * {NUM_ROUNDS}]
blocksize=4k
rw=randwrite
direct=1
numjobs=1

# ---------------------------------------------------------------------
# check different thread count, direct read mode. (latency, iops) = func(th_count)
# also check iops for randread
# ---------------------------------------------------------------------
[ceph_test_{TEST_SUMM} * {NUM_ROUNDS}]
blocksize=4k
rw=randread
direct=1
numjobs={NUMJOBS}

# ---------------------------------------------------------------------
# this is essentially sequential read openration
# we can't use seq read with numjobs > 1 on clouds due to caching
# ---------------------------------------------------------------------
[ceph_test_{TEST_SUMM} * {NUM_ROUNDS}]
blocksize=16m
rw=randread
direct=1
numjobs={NUMJOBS_SHORT}

# ---------------------------------------------------------------------
# sequential write
# ---------------------------------------------------------------------
[ceph_test_{TEST_SUMM} * {NUM_ROUNDS}]
blocksize=1m
rw=write
direct=1
numjobs={NUMJOBS}
